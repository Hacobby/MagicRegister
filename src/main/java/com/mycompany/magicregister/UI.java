/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.magicregister;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hacobby
 */
public class UI extends javax.swing.JFrame {

    private RegistroYControl inventario = new RegistroYControl();
    private DefaultTableModel modeloPrestacion;
    private DefaultTableModel modeloItem;
    private String msj;

    
    /**
     * Creates new form UI
     */
    public UI() {
        // Configuracion de las listas
        // Lista de prestamos 
        this.modeloItem = new DefaultTableModel(new Object[]{"Equipo", "Cantidad"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Hacer que todas las celdas no sean editables
            }
        };
        // Lista de items
        this.modeloPrestacion = new DefaultTableModel(new Object[]{"Cliente", "item", "Salon"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Hacer que todas las celdas no sean editables
            }
        };
        msj = "Trabajo en progreso, de momento solo puede registrar equipos\n y registrar prestamos de forma incompleta";
        
        initComponents();
        
        // Valores por defecto
        iniciarItemDefault();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane1 = new java.awt.ScrollPane();
        jPanel1 = new javax.swing.JPanel();
        registrarClienteButton = new javax.swing.JButton();
        registrarEquipoButton = new javax.swing.JButton();
        recibirEquipoButton = new javax.swing.JButton();
        prestarEquipoButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        equiposPrestados = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        equiposDisponibles = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Magic Register");
        setBackground(java.awt.Color.gray);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.gray);
        setIconImages(null);
        setName("vistaPrincipal"); // NOI18N
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        registrarClienteButton.setBackground(new java.awt.Color(105, 104, 100));
        registrarClienteButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        registrarClienteButton.setForeground(new java.awt.Color(255, 255, 255));
        registrarClienteButton.setText("Registrar cliente");
        registrarClienteButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        registrarClienteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registrarClienteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarClienteButtonActionPerformed(evt);
            }
        });

        registrarEquipoButton.setBackground(new java.awt.Color(105, 104, 100));
        registrarEquipoButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        registrarEquipoButton.setForeground(new java.awt.Color(255, 255, 255));
        registrarEquipoButton.setText("Registrar equipo");
        registrarEquipoButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        registrarEquipoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registrarEquipoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarEquipoButtonActionPerformed(evt);
            }
        });

        recibirEquipoButton.setBackground(new java.awt.Color(105, 104, 100));
        recibirEquipoButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        recibirEquipoButton.setForeground(new java.awt.Color(255, 255, 255));
        recibirEquipoButton.setText("Recibir equipo");
        recibirEquipoButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        recibirEquipoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        recibirEquipoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recibirEquipoButtonActionPerformed(evt);
            }
        });

        prestarEquipoButton.setBackground(new java.awt.Color(105, 104, 100));
        prestarEquipoButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        prestarEquipoButton.setForeground(new java.awt.Color(255, 255, 255));
        prestarEquipoButton.setText("Prestar equipo");
        prestarEquipoButton.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        prestarEquipoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        prestarEquipoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prestarEquipoButtonActionPerformed(evt);
            }
        });

        equiposPrestados.setBackground(new java.awt.Color(204, 204, 204));
        equiposPrestados.setModel(this.modeloPrestacion);
        equiposPrestados.setGridColor(new java.awt.Color(102, 102, 102));
        equiposPrestados.setShowGrid(true);
        jScrollPane1.setViewportView(equiposPrestados);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setLabelFor(equiposPrestados);
        jLabel3.setText("Equipo Prestados");

        equiposDisponibles.setBackground(new java.awt.Color(204, 204, 204));
        equiposDisponibles.setModel(this.modeloItem);
        equiposDisponibles.setGridColor(new java.awt.Color(102, 102, 102));
        equiposDisponibles.setShowGrid(true);
        jScrollPane3.setViewportView(equiposDisponibles);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setLabelFor(equiposPrestados);
        jLabel2.setText("Equipos disponibles");
        jLabel2.setMaximumSize(new java.awt.Dimension(92, 16));
        jLabel2.setMinimumSize(new java.awt.Dimension(92, 16));
        jLabel2.setPreferredSize(new java.awt.Dimension(92, 16));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registrarClienteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prestarEquipoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registrarEquipoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recibirEquipoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(prestarEquipoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(recibirEquipoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(registrarEquipoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(registrarClienteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleName("ProyectoPrestacion");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarItemDefault() {
        this.inventario.agregarItem("Laptop", 10);
        this.inventario.agregarItem("Cable HDMI", 10);
        this.inventario.agregarItem("VideoBeam", 5);
        
        for (Item item : inventario.getInventario()) {
            this.modeloItem.addRow(new Object[]{item.getNombre(), item.getCantidad()});
        }
    }
    
    private void actualizarListaItem() {
        this.modeloItem.setRowCount(0);
        
        for (Item item : inventario.getInventario()) {
            this.modeloItem.addRow(new Object[]{item.getNombre(), item.getCantidad()});
        }
    }
    
    private void registrarEquipoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarEquipoButtonActionPerformed
        // TODO add your handling code here:
        String nombre = JOptionPane.showInputDialog("¿Que item va a registrar?");
        int cantidad = Integer.parseInt(JOptionPane.showInputDialog("¿Cuantos de " + nombre + " registrara?"));
        this.inventario.agregarItem(nombre, cantidad);
        
        actualizarListaItem();

    }//GEN-LAST:event_registrarEquipoButtonActionPerformed

    private void prestarEquipoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prestarEquipoButtonActionPerformed
        // TODO add your handling code here:
        String nombre = JOptionPane.showInputDialog("Ingrese el nombre del cliente");
        
        if (nombre.equals("") || nombre.equals(" ")) {
            JOptionPane.showMessageDialog(rootPane, "Se han ingresado datos invalidos", "Error", 0);
            return;
        }        
        
        String ocupacion = JOptionPane.showInputDialog("Ingrese la ocupacion del cliente (Maestro/Alumno/Ejecutivo");
        
        if (ocupacion.equals("") || ocupacion.equals(" ")) {
            JOptionPane.showMessageDialog(rootPane, "Se han ingresado datos invalidos", "Error", 0);
            return;
        }
        
        int id;
        try {
            id = Integer.parseInt(JOptionPane.showInputDialog("ID del cliente (Universitario)"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Se han ingresado datos invalidos", "Error", 0);
            return;
        }
        
        String horaEntrega = JOptionPane.showInputDialog("Ingrese la hora del prestamo");
        
        if (horaEntrega.equals("") || horaEntrega.equals(" ")) {
            JOptionPane.showMessageDialog(rootPane, "Se han ingresado datos invalidos", "Error", 0);
            return;
        }
        
        String horaRecibo = JOptionPane.showInputDialog("Hora estimada de devolucion");
        
        if (horaRecibo.equals("") || horaRecibo.equals(" ")) {
            JOptionPane.showMessageDialog(rootPane, "Se han ingresado datos invalidos", "Error", 0);
            return;
        }
        
        String item = JOptionPane.showInputDialog("¿Que item se prestara?");
        
        if (item.equals("") || item.equals(" ")) {
            JOptionPane.showMessageDialog(rootPane, "Se han ingresado datos invalidos", "Error", 0);
            return;
        }
        
        if (!this.inventario.itemExiste(item)) {
            JOptionPane.showMessageDialog(rootPane, "Este item no existe en el inventario", "Error", 0);
            return;
        }
        
        int salon;
        try {
            salon = Integer.parseInt(JOptionPane.showInputDialog("En que salon se usara el item"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Se han ingresado datos invalidos", "Error", 0);
            return;
        }

        this.inventario.actualizarItem(item, 1);     
        this.inventario.agregarPrestamo(nombre, ocupacion, id, horaEntrega, horaRecibo, salon, item);
        
        this.modeloPrestacion.setRowCount(0);
        
        for (Prestacion prestacion : inventario.getEquiposPrestados()) {
            this.modeloPrestacion.addRow(new Object[]{prestacion.getNombre(), prestacion.getItem(), prestacion.getSalon()});
        }
        
        actualizarListaItem();
    }//GEN-LAST:event_prestarEquipoButtonActionPerformed

    private void recibirEquipoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recibirEquipoButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, this.msj, "Caracteristica no disponible", 1);
    }//GEN-LAST:event_recibirEquipoButtonActionPerformed

    private void registrarClienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarClienteButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, this.msj, "Caracteristica no disponible", 1);
    }//GEN-LAST:event_registrarClienteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable equiposDisponibles;
    private javax.swing.JTable equiposPrestados;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton prestarEquipoButton;
    private javax.swing.JButton recibirEquipoButton;
    private javax.swing.JButton registrarClienteButton;
    private javax.swing.JButton registrarEquipoButton;
    private java.awt.ScrollPane scrollPane1;
    // End of variables declaration//GEN-END:variables
}
